robot:
    # General parameters
    config_file: ${HOME}/git-repos/quadruped-reactive-walking/config/config_solo12.yaml  #  Name of the yaml file containing hardware information

    interface: enp2s0  # Name of the communication interface (check with ifconfig)
    LOGGING: true  # Enable/disable logging during the experiment
    PLOTTING: true  # Enable/disable automatic plotting at the end of the experiment
    DEMONSTRATION: false  # Enable/disable demonstration functionalities
    SIMULATION: true  # Enable/disable PyBullet simulation or running on real robot
    enable_pyb_GUI: true  # Enable/disable PyBullet GUI
    env_id: 0  # Identifier of the environment to choose in which one the simulation will happen
    use_flat_plane: true  # If True the ground is flat, otherwise it has bumps
    predefined_vel: true  # If we are using a predefined reference velocity (True) or a joystick (False)
    N_SIMULATION: 80000  # Number of simulated wbc time steps
    enable_corba_viewer: false  # Enable/disable Corba Viewer
    enable_multiprocessing: true     # Enable/disable running the MPC in another process in parallel of the main loop
    perfect_estimator: false  # Enable/disable perfect estimator by using data directly from PyBullet
    use_qualisys: false
    ocp:
      num_threads: 2  # number of threads allowed for the ocp solver
      max_iter: 1  # maximum number of solver iterations
      init_max_iters: 5  # initial max_iter
      verbose: false  # solver verbosity

    # General control parameters
    # q_init: [ 0.00208551,  0.97841023, -1.77335038,  0.0020868,   0.97951833, -1.77534163, 0.00208551,  0.97841023, -1.77335038,  0.0020868,   0.97951833, -1.77534163]
    # q_init: [0.0, 0.865, -1.583, 0.0, 0.865, -1.583, 0.0, 0.865, -1.583, 0.0, 0.865, -1.583] # h_com = 0.2
    # q_init: [0.0, 0.764, -1.407, 0.0, 0.76407, -1.4, 0.0, 0.76407, -1.407, 0.0, 0.764, -1.407]  # h_com = 0.218
    q_init: [0.0, 0.7, -1.4, 0.0, 0.7, -1.4, 0.0, -0.7, 1.4, 0.0, -0.7, 1.4]  # Initial articular positions
    h_ref: 0.260748 # Reference height for the base
    dt_wbc: 0.001  # Time step of the whole body control
    dt_mpc: 0.012  # Time step of the model predictive control
    save_guess: false # true to interpolate the impedance quantities between nodes of the MPC
    movement: "walk" # name of the movement to perform
    interpolate_mpc: true # true to interpolate the impedance quantities between nodes of the MPC
    interpolation_type: 3 # 0,1,2,3 decide which kind of interpolation is used
    closed_loop: true # true to close the loop on the MPC
    Kp_main: [1, 1, 1]  # Proportional gains for the PD+
    Kd_main: [0.2, 0.2, 0.2]  # Derivative gains for the PD+
    Kff_main: 1.0  # Feedforward torques multiplier for the PD+

    # Parameters of Gait
    N_periods: 1
    starting_nodes: 40
    ending_nodes: 40
    gait: [20, 1, 0, 0, 1,
           20, 0, 1, 1, 0]
    gait_repetitions: 200


    # Parameters of Joystick
    gp_alpha_vel: 0.003  # Coefficient of the low pass filter applied to gamepad velocity
    gp_alpha_pos: 0.005  # Coefficient of the low pass filter applied to gamepad position
    t_switch: [  0,   1,   3,  4,  5,   8,   9,   10]
    v_switch: [0.0, 0.3,  0.3,  0, -0.3,  -0.3, 0.0,  0.0,
               0.0, 0.00, 0.0, 0.0, 0.0,  0.0,  0.0,  0.0,
               0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0,  0.0,
               0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0,  0.0,
               0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0,  0.0,
               0.0, 0.0, 0.0, 0.0, 0.0,  0.0,  0.0,  0.0]

    # Parameters of Estimator
    fc_v_esti: 50.0  # Cut frequency for the low pass that filters the estimated base velocity

    # Parameters fro solo3D simulation
    solo3D: false  # Activation of the 3D environment, and corresponding planner blocks
    environment_URDF: "/short_bricks/short_bricks.urdf"
    environment_heightmap: "/short_bricks/short_bricks.bin"
